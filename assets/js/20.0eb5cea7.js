(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{371:function(t,e,a){"use strict";a.r(e);var n=a(40),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"csearchinput"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csearchinput"}},[t._v("#")]),t._v(" CSearchInput "),a("Badge",{attrs:{text:"Search Input"}})],1),t._v(" "),a("p",[t._v("This component is an input that allow you to filter the data, the data is filter in a lazy way, that means that only uprefresh the table when "),a("code",[t._v("onChange:event")]),t._v(" is triggered.")]),t._v(" "),a("CImage",{attrs:{src:"csearch_input_design.png",caption:"Design: Search Input"}}),t._v(" "),a("p",[t._v("::: tip\nIf you want to update each time that you type, remove the keyword "),a("code",[t._v("lazy")]),t._v(" from "),a("code",[t._v("v-model")]),t._v(".\n:::")]),t._v(" "),a("p",[t._v("It uses "),a("code",[t._v("isLoading")]),t._v(" and  "),a("code",[t._v("filter")]),t._v(" from "),a("code",[t._v("store.js")]),t._v(".")]),t._v(" "),a("p",[t._v("At the end of the input there is a "),a("Badge",{attrs:{text:"spinner",type:"tip"}}),t._v("  that is shown when the data is loading.")],1)],1)}),[],!1,null,null,null);e.default=s.exports}}]);